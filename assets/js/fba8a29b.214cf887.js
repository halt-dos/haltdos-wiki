"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[94822],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,g=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return r?a.createElement(g,o(o({ref:t},c),{},{components:r})):a.createElement(g,o({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},81435:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});r(67294);var a=r(3905);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},n.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const o={},l="Load Balancing",s={unversionedId:"enterprise/waf/listener/server_groups/loadbalancing",id:"version-7.0/enterprise/waf/listener/server_groups/loadbalancing",title:"Load Balancing",description:"Load Balancing mechanism used for WAF",source:"@site/versioned_docs/version-7.0/enterprise/waf/listener/server_groups/loadbalancing.md",sourceDirName:"enterprise/waf/listener/server_groups",slug:"/enterprise/waf/listener/server_groups/loadbalancing",permalink:"/enterprise/waf/listener/server_groups/loadbalancing",draft:!1,tags:[],version:"7.0",frontMatter:{},sidebar:"waf_sidebar",previous:{title:"Server Groups",permalink:"/enterprise/waf/listener/server_groups/servergroup"},next:{title:"Servers",permalink:"/enterprise/waf/listener/server_groups/servers"}},p={},c=[{value:"Overview",id:"overview",level:2},{value:"Load Balancing Algorithms",id:"load-balancing-algorithms",level:3},{value:"How to Use:",id:"how-to-use",level:3},{value:"Description",id:"description",level:3},{value:"<strong>Upstream Retries</strong>",id:"upstream-retries",level:5},{value:"<strong>Fail-over Threshold</strong>",id:"fail-over-threshold",level:5},{value:"<strong>Client IP Pool</strong>",id:"client-ip-pool",level:5},{value:"<strong>Algorithm</strong>",id:"algorithm",level:5},{value:"<strong>Sticky Session Cookie</strong>",id:"sticky-session-cookie",level:5}],u={toc:c},d="wrapper";function h(e){var{components:t}=e,o=i(e,["components"]);return(0,a.kt)(d,n({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",n({},{id:"load-balancing"}),"Load Balancing"),(0,a.kt)("p",null,"Load Balancing mechanism used for WAF"),(0,a.kt)("hr",null),(0,a.kt)("h2",n({},{id:"overview"}),"Overview"),(0,a.kt)("p",null,"Load balancing across multiple application instances is a commonly used technique for optimizing resource utilization, maximizing throughput, reducing latency, and ensuring fault-tolerant configurations."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Load Balancing",src:r(83472).Z,width:"1824",height:"779"})),(0,a.kt)("h3",n({},{id:"load-balancing-algorithms"}),"Load Balancing Algorithms"),(0,a.kt)("p",null,"This field specifies the load balancing algorithm according to the configured website."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"ROUND ROBIN"),":\nThis algorithm is a smart approach to distribute client requests across an array of servers. It forwards the client request to each server in turn. Also, assigns a weight to each server as per current load and idle capacity.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"LEAST CONNECTIONS"),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which has the least no. of active connections on the server.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"LEAST LISTENER CONNECTIONS"),":\nThis algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have a small response time in order to serve requests.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"LEAST RESPONSE TIME"),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have a small response time in order to serve requests.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"MINIMUM JITTER"),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have served the minimum jitter. NOTE: For this algorithm to work, the server group should have ICMP monitor attached.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"IP HASH"),": This algorithm takes the client's and server's source and destination IP address to generate a unique hash key. This key is used to assign the client to a specific server. In the case of a broken session, the key can be regenerated, and the client can be directed to the same server. ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"PERSISTENT HASH"),": This algorithm takes the user input location within the current request to generate a user-defined custom unique hash key. This key is used to assign the client to a specific server. In the case of a broken session, the key can be regenerated, and the client can be directed to the same server. NOTE: In hashing-based load balancing,  if a specified value does not exists then the request is served on the basis of client's IP address.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Least Requests:"),"\nThis algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have served the minimum amount of requests.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"SNMP Metrics"),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have least CPU / RAM usage. NOTE: For this algorithm to work, the server group should have SNMP monitor attached.    "))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Load Balancing",src:r(63070).Z,width:"1834",height:"710"})),(0,a.kt)("h3",n({},{id:"how-to-use"}),"How to Use:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Go to ",(0,a.kt)("strong",{parentName:"p"},"WAF")," > ",(0,a.kt)("strong",{parentName:"p"},"Listeners")," > ",(0,a.kt)("strong",{parentName:"p"},"Server Groups")," > ",(0,a.kt)("strong",{parentName:"p"},"Load Balancing"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the configurations and ",(0,a.kt)("strong",{parentName:"p"},"Save Changes"),"."))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Parameters"),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Accepted Values"),(0,a.kt)("th",n({parentName:"tr"},{align:null}),"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Upstream Retries This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which has the least no. of active connections to the back-end server."),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Fail-over Threshold"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"50")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Client IP Pool"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Integer"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Blank")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Algorithm"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Algorithm Drop-down"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"ROUND ROBIN")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Sticky Session Cookie"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"String"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Blank")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",n({parentName:"tr"},{align:null}),"Add location"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"String & Integer"),(0,a.kt)("td",n({parentName:"tr"},{align:null}),"This toggle button allows you to enable the Web-socket support for servers in the server group.None & Src IP")))),(0,a.kt)("h3",n({},{id:"description"}),"Description"),(0,a.kt)("h5",n({},{id:"upstream-retries"}),(0,a.kt)("strong",{parentName:"h5"},"Upstream Retries")),(0,a.kt)("p",null,"This option used to specify the upstream retries. By default, the value is set to 1."),(0,a.kt)("h5",n({},{id:"fail-over-threshold"}),(0,a.kt)("strong",{parentName:"h5"},"Fail-over Threshold")),(0,a.kt)("p",null,"This option specify the fail-over threshold in percentage of (active/total) primary servers for switching to backup servers. By default, the value is set to 50%."),(0,a.kt)("h5",n({},{id:"client-ip-pool"}),(0,a.kt)("strong",{parentName:"h5"},"Client IP Pool")),(0,a.kt)("p",null,"Specify list of client IP to use when connecting to upstream. Leave blank for auto"),(0,a.kt)("h5",n({},{id:"algorithm"}),(0,a.kt)("strong",{parentName:"h5"},"Algorithm")),(0,a.kt)("p",null,"This option is used to specify the algorithm used by the server group. By default, the value is selected as Round Robin."),(0,a.kt)("h5",n({},{id:"sticky-session-cookie"}),(0,a.kt)("strong",{parentName:"h5"},"Sticky Session Cookie")),(0,a.kt)("p",null,"Specify enabling sticky session based on specified cookie"))}h.isMDXComponent=!0},83472:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/loadbalancing-cede59aa38b1f3ee5575cf795e6bb8bb.png"},63070:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/loadbalancing1-9fbe4e5f15f424764c7da50a605add33.png"}}]);