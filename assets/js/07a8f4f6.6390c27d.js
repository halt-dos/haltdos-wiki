/*! For license information please see 07a8f4f6.6390c27d.js.LICENSE.txt */
"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[5433],{419:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"kb/waf/kb-1072","title":"KB: 1072","description":"What are the baseline security approaches for an application onboarded on Haltdos WAF","source":"@site/docs/kb/waf/kb-1072.md","sourceDirName":"kb/waf","slug":"/kb/waf/kb-1072","permalink":"/kb/waf/kb-1072","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":72,"frontMatter":{"sidebar_position":72},"sidebar":"kb_sidebar","previous":{"title":"KB: 1071","permalink":"/kb/waf/kb-1071"},"next":{"title":"KB: 1073","permalink":"/kb/waf/kb-1073"}}');var i=n(74848),r=n(28453);const o={sidebar_position:72},a="KB: 1072",c={},l=[{value:"<strong>What are the baseline security approaches for an application onboarded on Haltdos WAF</strong>",id:"what-are-the-baseline-security-approaches-for-an-application-onboarded-on-haltdos-waf",level:4}];function d(e){const s={a:"a",h1:"h1",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"kb-1072",children:"KB: 1072"})}),"\n",(0,i.jsx)(s.h4,{id:"what-are-the-baseline-security-approaches-for-an-application-onboarded-on-haltdos-waf",children:(0,i.jsx)(s.strong,{children:"What are the baseline security approaches for an application onboarded on Haltdos WAF"})}),"\n",(0,i.jsx)(s.p,{children:"Security baseline approaches a client can follow post onboarding the\napplication: -"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Maximum HTTP Body Size"}),"- It specifies the maximum allowed HTTP body size from a single client IP. By default, Haltdos WAF has a maximum body size limit of 10 MB, which users can configure according to their application requirements."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- (Operational Settings)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/Setting/operational",children:"https://docs.haltdos.com/enterprise/waf/listener/Setting/operational"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"End-to-End Encryption-"})," The SSL certificate ensures that all data transmitted between users and the application is encrypted. This protects sensitive information from being intercepted or tampered with during transit."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- (SSL Management)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/ssl_management",children:"https://docs.haltdos.com/enterprise/waf/listener/ssl_management"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Tuning Security Profiles-"})," During the application onboarding phase, Haltdos WAF operates in RECORD mode, where it observes traffic and identifies false positives and negatives. This process helps in fine-tuning security policies to match the specific needs of the application. Users can decide how long the application will remain in RECORD mode, and after fine-tuning all false positives,the application can be moved to MITIGATION mode."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- (Security Profile Settings)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/profiles/settings",children:"https://docs.haltdos.com/enterprise/waf/listener/profiles/settings"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Web Policies"}),"- This specifies the web policies for the application, including allowed HTTP methods, restricted extensions, restricted file uploads, and more. Users can configure these policies according to the application's requirements."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- (Web Policy)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/profiles/policy/web_policy",children:"https://docs.haltdos.com/enterprise/waf/listener/profiles/policy/web_policy"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Signatures-"})," Signatures contain rules that are evaluated for each request that passes through Haltdos WAF. The rules offer protection from many different types of attacks for Web Service/API including OWASP top 10 and can help users specify the behavior for their application. These signatures should be in PROD mode after application onboarding."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- (Attack Signatures)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/profiles/signatures",children:"https://docs.haltdos.com/enterprise/waf/listener/profiles/signatures"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Caching and Compression"}),"- When caching is enabled, WAF saves responses in a directory and uses them to respond to clients without having to proxy requests for the same content every time. Haltdos WAF provides you with the ability to compress or decompress the responses which often significantly reduces the size of transmitted data and increases performance."]}),"\n",(0,i.jsxs)(s.p,{children:["Reference- ",(0,i.jsx)("br",{}),"\n(Caching)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/loadBalancing/caching",children:"https://docs.haltdos.com/enterprise/waf/listener/loadBalancing/caching"}),"]"," and (Compression)[",(0,i.jsx)(s.a,{href:"https://docs.haltdos.com/enterprise/waf/listener/loadBalancing/compression",children:"https://docs.haltdos.com/enterprise/waf/listener/loadBalancing/compression"}),"]"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},21020:(e,s,n)=>{var t=n(96540),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,s,n){var t,r={},l=null,d=null;for(t in void 0!==n&&(l=""+n),void 0!==s.key&&(l=""+s.key),void 0!==s.ref&&(d=s.ref),s)o.call(s,t)&&!c.hasOwnProperty(t)&&(r[t]=s[t]);if(e&&e.defaultProps)for(t in s=e.defaultProps)void 0===r[t]&&(r[t]=s[t]);return{$$typeof:i,type:e,key:l,ref:d,props:r,_owner:a.current}}s.Fragment=r,s.jsx=l,s.jsxs=l},74848:(e,s,n)=>{e.exports=n(21020)},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);