"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[81526],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=l,b=u["".concat(s,".").concat(d)]||u[d]||f[d]||i;return r?n.createElement(b,a(a({ref:t},p),{},{components:r})):n.createElement(b,a({ref:t},p))}));function b(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=r.length,a=new Array(i);a[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:l,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39522:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});r(67294);var n=r(3905);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},l.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}const a={sidebar_position:6},o="Blacklist",s={unversionedId:"cloud/waf/Settings/blacklist",id:"cloud/waf/Settings/blacklist",title:"Blacklist",description:"---",source:"@site/docs/cloud/waf/Settings/blacklist.md",sourceDirName:"cloud/waf/Settings",slug:"/cloud/waf/Settings/blacklist",permalink:"/cloud/waf/Settings/blacklist",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"cloud_sidebar",previous:{title:"Incidents",permalink:"/cloud/waf/incidents"},next:{title:"Whitelist",permalink:"/cloud/waf/Settings/whitelist"}},c={},p=[{value:"Overview",id:"overview",level:3},{value:"Global Blacklistlist Rules",id:"global-blacklistlist-rules",level:3},{value:"Description",id:"description",level:2}],u={toc:p},f="wrapper";function d(e){var{components:t}=e,a=i(e,["components"]);return(0,n.kt)(f,l({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",l({},{id:"blacklist"}),"Blacklist"),(0,n.kt)("hr",null),(0,n.kt)("h3",l({},{id:"overview"}),"Overview"),(0,n.kt)("p",null,"Global settings help to configure the settings whose scope is global. Here we have Global Whitelist Rules which would whitelist the mitigations globally irrespective of zone or listener."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Global Whitelist Rules",src:r(50783).Z,width:"1910",height:"900"})),(0,n.kt)("h3",l({},{id:"global-blacklistlist-rules"}),"Global Blacklistlist Rules"),(0,n.kt)("p",null,"These are the whitelist rule which helps in whitelisting mitigations globally for all the zones and listener in the stack."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"How to Use:")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Go to ",(0,n.kt)("strong",{parentName:"li"},"WAF")," > ",(0,n.kt)("strong",{parentName:"li"},"Global Blacklist")," > ",(0,n.kt)("strong",{parentName:"li"},"Global Blacklist Rule")),(0,n.kt)("li",{parentName:"ol"},"Click on ",(0,n.kt)("strong",{parentName:"li"},"Add Rule")," button."),(0,n.kt)("li",{parentName:"ol"},"Configure the Fields"),(0,n.kt)("li",{parentName:"ol"},"Click ",(0,n.kt)("strong",{parentName:"li"},"Save Changes"))),(0,n.kt)("h2",l({},{id:"description"}),"Description"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Threat Intel Feed"),(0,n.kt)("br",{parentName:"p"}),"\n","Select list of threat intel where specified IPs will be permanently disallowed"),(0,n.kt)("pre",null,(0,n.kt)("code",l({parentName:"pre"},{}),"Accepted values: Add Threate Intel Feed\n\nDefault: Blank\n")))}d.isMDXComponent=!0},50783:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/blacklist-68e715c01a157b573ae9911be6dbf50a.png"}}]);