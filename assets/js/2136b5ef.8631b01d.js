"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[98837],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},42506:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>p,toc:()=>c});r(67294);var n=r(3905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const i={},s="Forwarders",p={unversionedId:"enterprise/waf/listener/settings/forwarders",id:"enterprise/waf/listener/settings/forwarders",title:"Forwarders",description:"Forwarding Decrypted Application Traffic to Security Endpoint Devices",source:"@site/docs/enterprise/waf/listener/settings/forwarders.md",sourceDirName:"enterprise/waf/listener/settings",slug:"/enterprise/waf/listener/settings/forwarders",permalink:"/enterprise/waf/listener/settings/forwarders",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"waf_sidebar",previous:{title:"Observabilty",permalink:"/enterprise/waf/listener/observabilty"},next:{title:"User Groups",permalink:"/enterprise/waf/usergroups"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"How To Use:",id:"how-to-use",level:3},{value:"Description",id:"description",level:3},{value:"<strong>Name</strong>",id:"name",level:4},{value:"<strong>Forwarder Mode</strong>",id:"forwarder-mode",level:4},{value:"<strong>Server IP</strong>",id:"server-ip",level:4},{value:"<strong>Server Port</strong>",id:"server-port",level:4},{value:"<strong>Service Name</strong>",id:"service-name",level:4},{value:"<strong>ICAP Method</strong>",id:"icap-method",level:4},{value:"<strong>ICAP Request Timeout</strong>",id:"icap-request-timeout",level:4}],d={toc:c},u="wrapper";function f(e){var{components:t}=e,i=o(e,["components"]);return(0,n.kt)(u,a({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",a({},{id:"forwarders"}),"Forwarders"),(0,n.kt)("p",null,"Forwarding Decrypted Application Traffic to Security Endpoint Devices"),(0,n.kt)("hr",null),(0,n.kt)("h2",a({},{id:"overview"}),"Overview"),(0,n.kt)("p",null,"User can set up multiple services of forwarding decrypted traffic of an application onboarded on Haltdos WAF to their security endpoint devices for further traffic inspection."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Antivirus",src:r(45487).Z,width:"1475",height:"927"})),(0,n.kt)("h3",a({},{id:"how-to-use"}),"How To Use:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Go to ",(0,n.kt)("strong",{parentName:"li"},"WAF")," > ",(0,n.kt)("strong",{parentName:"li"},"Listener")," > ",(0,n.kt)("strong",{parentName:"li"},"Settings")," > ",(0,n.kt)("strong",{parentName:"li"},"Forwarders")),(0,n.kt)("li",{parentName:"ol"},"Configure Forwarder Settings"),(0,n.kt)("li",{parentName:"ol"},"Click on ",(0,n.kt)("strong",{parentName:"li"},"Save Changes"))),(0,n.kt)("h3",a({},{id:"description"}),"Description"),(0,n.kt)("h4",a({},{id:"name"}),(0,n.kt)("strong",{parentName:"h4"},"Name")),(0,n.kt)("p",null,"This field specifies the name of the forwarder going to be configured."),(0,n.kt)("h4",a({},{id:"forwarder-mode"}),(0,n.kt)("strong",{parentName:"h4"},"Forwarder Mode")),(0,n.kt)("p",null,"This field specifies the mode for sending decrypted traffic to the endpoint devices. There are three modes of forwarding decrypted traffic: Layer 2, Layer 3, ICAP."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: Layer 2 / Layer 3 / ICAP\n\nDefault: LAYER 3\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Layer 2")," : Forwarding Decrypted Traffic directly to an Interface, if the security endpoint devices are configured in Transparent Mode.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Layer 3")," : Forwarding Decrypted Traffic to Server IP and Port of the endpoint security.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"ICAP")," : Forwarding Decrypted Traffic to an ICAP server for further inspection."))),(0,n.kt)("h4",a({},{id:"server-ip"}),(0,n.kt)("strong",{parentName:"h4"},"Server IP")),(0,n.kt)("p",null,"If the Forwarder Mode is set as ",(0,n.kt)("strong",{parentName:"p"},"Layer 3")," or ",(0,n.kt)("strong",{parentName:"p"},"ICAP"),", IP address must be configured to forward the traffic either directly or to the ICAP server."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: IP\n\nDefault: Blank  \n")),(0,n.kt)("h4",a({},{id:"server-port"}),(0,n.kt)("strong",{parentName:"h4"},"Server Port")),(0,n.kt)("p",null,"If the Forwarder Mode is set as ",(0,n.kt)("strong",{parentName:"p"},"Layer 3")," or ",(0,n.kt)("strong",{parentName:"p"},"ICAP"),", we need to specify the server port to forward traffic."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: Port\n\nDefault: 1334 (Port 1344 is the default ICAP port).\n")),(0,n.kt)("h4",a({},{id:"service-name"}),(0,n.kt)("strong",{parentName:"h4"},"Service Name")),(0,n.kt)("p",null,"If the Forwarder Mode is set as ",(0,n.kt)("strong",{parentName:"p"},"ICAP"),", we need to specify the name of the ICAP service to scan against antivirus."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: icap://< ip_address >/< name >/\n\nDefault: Blank\n")),(0,n.kt)("h4",a({},{id:"icap-method"}),(0,n.kt)("strong",{parentName:"h4"},"ICAP Method")),(0,n.kt)("p",null,"If the Forwarder Mode is set as ",(0,n.kt)("strong",{parentName:"p"},"ICAP"),", We need to specify the ICAP request method for traffic inspection. There are three modes for ICAP Method: ",(0,n.kt)("strong",{parentName:"p"},"REQMOD"),", ",(0,n.kt)("strong",{parentName:"p"},"RESPMOD"),", ",(0,n.kt)("strong",{parentName:"p"},"OPTIONS"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: Specify the request method for antivirus scanning.\n\nDefault: REQMOD \n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Request Modification Mode (REQMOD)"),": Checks the contents of HTTP requests and uploaded files & content")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Response Modification Mode (RESPMOD)"),": Checks downloaded files and content")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Options")," : Reports the number of simultaneous connections that can be served"))),(0,n.kt)("h4",a({},{id:"icap-request-timeout"}),(0,n.kt)("strong",{parentName:"h4"},"ICAP Request Timeout")),(0,n.kt)("p",null,"If the Forwarder Mode is set as ",(0,n.kt)("strong",{parentName:"p"},"ICAP"),", we need to specify the timeout in milliseconds for request timeout. If an ICAP request has not been completed before the timeout, the connection to the client gets closed."),(0,n.kt)("pre",null,(0,n.kt)("code",a({parentName:"pre"},{}),"Accepted values: Integer\n\nDefault: 800  \n\nMetrics: milliSeconds\n")))}f.isMDXComponent=!0},45487:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/forwarder-51c1d50d03aa78064c49c76319bb9058.png"}}]);