"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[86508],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var l=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=l.createContext({}),c=function(e){var t=l.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},b=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),b=n,d=u["".concat(s,".").concat(b)]||u[b]||f[b]||i;return r?l.createElement(d,a(a({ref:t},p),{},{components:r})):l.createElement(d,a({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return l.createElement.apply(null,a)}return l.createElement.apply(null,r)}b.displayName="MDXCreateElement"},20288:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>a,metadata:()=>s,toc:()=>p});r(67294);var l=r(3905);function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var l in r)Object.prototype.hasOwnProperty.call(r,l)&&(e[l]=r[l])}return e},n.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)r=i[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const a={},o="Blacklist",s={unversionedId:"enterprise/waf/Global/blacklist",id:"version-7.0/enterprise/waf/Global/blacklist",title:"Blacklist",description:"---",source:"@site/versioned_docs/version-7.0/enterprise/waf/Global/blacklist.md",sourceDirName:"enterprise/waf/Global",slug:"/enterprise/waf/Global/blacklist",permalink:"/v7/enterprise/waf/Global/blacklist",draft:!1,tags:[],version:"7.0",frontMatter:{},sidebar:"waf_sidebar",previous:{title:"Virtual Patching",permalink:"/v7/enterprise/waf/tools/virtualpatching"},next:{title:"Whitelist",permalink:"/v7/enterprise/waf/Global/whitelist"}},c={},p=[{value:"Overview",id:"overview",level:3},{value:"Global Blacklistlist Rules",id:"global-blacklistlist-rules",level:3},{value:"<strong>Description</strong>",id:"description",level:4},{value:"<strong>Threat Intel Feed</strong>",id:"threat-intel-feed",level:5}],u={toc:p},f="wrapper";function b(e){var{components:t}=e,a=i(e,["components"]);return(0,l.kt)(f,n({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",n({},{id:"blacklist"}),"Blacklist"),(0,l.kt)("hr",null),(0,l.kt)("h3",n({},{id:"overview"}),"Overview"),(0,l.kt)("p",null,"Global settings help to configure the settings whose scope is global. Here we have Global Whitelist Rules which would whitelist the mitigations globally irrespective of zone or listener."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Global Blacklist Rules",src:r(50832).Z,width:"1923",height:"628"})),(0,l.kt)("h3",n({},{id:"global-blacklistlist-rules"}),"Global Blacklistlist Rules"),(0,l.kt)("p",null,"These are the whitelist rule which helps in whitelisting mitigations globally for all the zones and listener in the stack."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"How to Use:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Go to ",(0,l.kt)("strong",{parentName:"li"},"WAF")," > ",(0,l.kt)("strong",{parentName:"li"},"Global Whitelist")," > ",(0,l.kt)("strong",{parentName:"li"},"Global Whitelist Rule")),(0,l.kt)("li",{parentName:"ol"},"Click on ",(0,l.kt)("strong",{parentName:"li"},"Add Rule")," button."),(0,l.kt)("li",{parentName:"ol"},"Configure the Fields"),(0,l.kt)("li",{parentName:"ol"},"Click ",(0,l.kt)("strong",{parentName:"li"},"Save Changes"))),(0,l.kt)("h4",n({},{id:"description"}),(0,l.kt)("strong",{parentName:"h4"},"Description")),(0,l.kt)("h5",n({},{id:"threat-intel-feed"}),(0,l.kt)("strong",{parentName:"h5"},"Threat Intel Feed")),(0,l.kt)("p",null,"Select list of threat intel where specified IPs will be permanently disallowed"),(0,l.kt)("pre",null,(0,l.kt)("code",n({parentName:"pre"},{}),"Accepted values: Add Threate Intel Feed\n\nDefault: Blank\n")))}b.isMDXComponent=!0},50832:(e,t,r)=>{r.d(t,{Z:()=>l});const l=r.p+"assets/images/blacklist-5a7c518cef07050dfd524e2f6ec12aa4.png"}}]);