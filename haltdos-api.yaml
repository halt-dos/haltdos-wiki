{
  "openapi": "3.0.1",
  "info": {
    "title": "Haltdos API",
    "description": "Haltdos Platform API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://springdoc.org"
    },
    "version": "v1.0.0"
  },
  "externalDocs": {
    "description": "SpringShop Wiki Documentation",
    "url": "https://springshop.wiki.github.org/docs"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/v1/stack/{stackId}/content": {
      "put": {
        "tags": [
          "Management"
        ],
        "description": "Update resource content",
        "operationId": "updateContent",
        "parameters": [
          {
            "name": "Content Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Metadata",
            "in": "query",
            "description": "JSON serialized Map\u003CString, Object\u003E of parameters required for certificate generation",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Add resource content",
        "operationId": "addContent",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SSL_CERTIFICATE",
                "PUBLIC_PRIVATE_KEY",
                "CERTIFICATE_AUTHORITY",
                "CACHE_POOL",
                "CREDENTIALS",
                "PAYLOAD",
                "CERT_REVOCATION_LIST",
                "CLIENT_CERTIFICATE",
                "ERROR_PAGE",
                "IP_FEED",
                "RPZ",
                "HEALTH_SCRIPT"
              ]
            }
          },
          {
            "name": "Metadata",
            "in": "query",
            "description": "JSON serialized Map\u003CString, Object\u003E of parameters required for certificate generation",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "description": "Delete resource content",
        "operationId": "deleteContent",
        "parameters": [
          {
            "name": "Content Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the WAF module configuration for the specified stack, zone, and path.",
        "operationId": "getModule",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": " Updates the WAF module configuration with the provided action and configuration for the specified zone and path.",
        "operationId": "updateModule",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "description": "Deletes the WAF module for the specified zone and path.",
        "operationId": "deleteModule",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/upload/scan": {
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": " Uploads a vulnerability scan file for a specific WAF stack using a specified scan tool.",
        "operationId": "uploadVersion",
        "parameters": [
          {
            "name": "Scan Tool",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AcunetixJson",
                "BurpXml",
                "ZapJson"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/mf/download": {
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": "Downloads MF events for a given time range and reference ID.",
        "operationId": "downloadMatchEvents",
        "parameters": [
          {
            "name": "Start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/fp/download": {
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": "Downloads FP incident events based on the specified filter.",
        "operationId": "downloadEvents",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/rules/learning": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves the learning status of WAF signatures for a given stack and filter.",
        "operationId": "getRulesStatus",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": "Updates the status of WAF rules for a specific zone and profile, with an optional action for all rules or a specific rule.",
        "operationId": "updateRuleStatus",
        "parameters": [
          {
            "name": "ZoneId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProfileId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "UpdateAllRule",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RuleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/listener/{referenceId}/discovery": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves the learning status and discovery scores for a specific WAF listener.",
        "operationId": "getDiscoveryScores",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseLearningStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseLearningStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": "Updates the learning configuration for a WAF listener, including profile and action parameters.",
        "operationId": "updateLearning",
        "parameters": [
          {
            "name": "ProfileId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Params",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/listener/{referenceId}/discovery/upload": {
      "post": {
        "tags": [
          "WAF-API"
        ],
        "description": "Uploads a file for discovery learning to a WAF listener with an optional profile ID.",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "ProfileId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/task": {
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Create or update Task",
        "operationId": "createOrUpdateTask",
        "parameters": [
          {
            "name": "Task",
            "in": "query",
            "description": "JSON serialized Task object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseTask"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/swg": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the SWG (Secure Web Gateway) module configuration for the specified stack and reference ID.",
        "operationId": "getModule_1",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the SWG module configuration for the specified stack, reference ID, action, and configuration.",
        "operationId": "updateModule_1",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/slb": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves SLB (Server Load Balancer) module configuration for the specified stack and reference ID.",
        "operationId": "getModule_2",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the SLB module configuration for the specified stack, reference ID, and action.",
        "operationId": "updateModule_2",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/slb/bot/key-generate": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Generates an encryption key for a listener in the specified stack and listener ID.",
        "operationId": "generateEncryptionKey",
        "parameters": [
          {
            "name": "Full Name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Listerner Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/settings": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get stack settings",
        "operationId": "getStackSettings",
        "parameters": [
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Create or Update stack settings",
        "operationId": "saveStackSettings",
        "parameters": [
          {
            "name": "Path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Update Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseStackApp"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseStackApp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/sessions/export": {
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Exports session table in excel format",
        "operationId": "exportSessions",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Match",
            "in": "query",
            "description": "Filter by match content",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves scanner profiles for the specified stack and reference ID.",
        "operationId": "getScannerProfiles",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Sets or updates a scanner profile for the specified stack based on the action and configuration.",
        "operationId": "setScannerProfile",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan/task": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Creates a new scan task for the specified stack based on the provided task JSON.",
        "operationId": "createScan",
        "parameters": [
          {
            "name": "Task Json",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan/report": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Generates a scan report based on the provided task ID and event ID.",
        "operationId": "generateScanReport",
        "parameters": [
          {
            "name": "Task Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Event Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/rdns": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves RDNS module settings for a specified stack and reference ID.",
        "operationId": "getModule_3",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates RDNS module configuration for a specified stack and reference ID based on the provided action and configuration.",
        "operationId": "updateModule_3",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/llb": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves LLB module settings for a specified stack and reference ID.",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "Referenece Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates LLB module configuration for a specified stack and reference ID based on the provided action and configuration.",
        "operationId": "updateModule_4",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/llb/rules/status": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the status of an LLB rule for a specified port ID, action, and optional rule ID and configuration.",
        "operationId": "updateRuleStatus_1",
        "parameters": [
          {
            "name": "Port Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Rule Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseHashMapStringCoreRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseHashMapStringCoreRule"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/incidents": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of incidents",
        "operationId": "getIncidents",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Refernce Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Incident Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Matching Criteria",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "description": "Defaults to 0 if not specified",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "description": "Defaults to 10 if not specified",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Exports incidents in excel format",
        "operationId": "exportIncidents",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "Incident Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Matching Criteria",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/dns": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves DNS module settings for a specified stack and reference ID.",
        "operationId": "getModule_4",
        "parameters": [
          {
            "name": "reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates DNS module configuration for a specified stack and reference ID based on the provided action and configuration.",
        "operationId": "updateModule_5",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/ddos": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the current DDoS settings for a specified stack and reference ID.",
        "operationId": "getSettings_1",
        "parameters": [
          {
            "name": "ReferenceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the DDoS module configuration for a specified stack and reference ID based on the provided action and configuration.",
        "operationId": "updateModule_6",
        "parameters": [
          {
            "name": "ReferenceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/ddos/rules/status": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the status of a specified DDoS rule based on the provided profile ID and action.",
        "operationId": "updateRuleStatus_2",
        "parameters": [
          {
            "name": "ProfileId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "RuleId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseHashMapStringCoreRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseHashMapStringCoreRule"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/ddos/detection": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the list of alarms for a specified DDoS profile within a stack.",
        "operationId": "getAlarms",
        "parameters": [
          {
            "name": "ProfileId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseAlarm"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseAlarm"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the alarm settings for a specified DDoS profile within a stack.",
        "operationId": "updateAlarms",
        "parameters": [
          {
            "name": "ProfileId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Alarm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/cdn": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Get CDN configuration",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates CDN configuration",
        "operationId": "saveConfiguration",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "description": "JSON Serialized configuration object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/blk": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the settings for a specified stack and reference ID.",
        "operationId": "getSettings_2",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the configuration for a specified stack and reference ID based on the given action.",
        "operationId": "updateModule_7",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves a module based on the provided stack and reference IDs.",
        "operationId": "getModule_5",
        "parameters": [
          {
            "name": "ReferenceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates a module's configuration and action based on the specified parameters.",
        "operationId": "updateModule_8",
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/upload/scan": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": " Uploads a vulnerability assessment scan result file.",
        "operationId": "uploadVAScanResult",
        "parameters": [
          {
            "name": "Scan Tool",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AcunetixJson",
                "BurpXml",
                "ZapJson"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/mf/download": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": " Downloads match events within the specified time range and reference ID.",
        "operationId": "downloadMatchEvents_1",
        "parameters": [
          {
            "name": "Start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Referene Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/fp/download": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Downloads events based on the specified filter criteria.",
        "operationId": "downloadEvents_1",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/access-logs/download": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Exports access logs for a specified time range and reference ID.",
        "operationId": "exportLogs",
        "parameters": [
          {
            "name": "Start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/rules/learning": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the status of a specific rule based on the given parameters.",
        "operationId": "getRulesStatus_1",
        "parameters": [
          {
            "name": "Json Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": " Updates the status of a specific rule based on the given parameters.",
        "operationId": "updateRuleStatus_3",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          },
          {
            "name": "Update All Rule",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Rule Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Configuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/listener/{referenceId}/discovery": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the learning status for a listener based on pagination and matching criteria.",
        "operationId": "getLearningStatus",
        "parameters": [
          {
            "name": "Page Number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Match",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseLearningStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseLearningStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Updates the learning configuration for a listener based on the provided parameters.",
        "operationId": "updateLearning_1",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Params",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Action Configuration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "EDIT",
                "RESET",
                "DELETE",
                "RELOAD"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/listener/{referenceId}/discovery/upload": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Uploads a file related to a listener's configuration.",
        "operationId": "uploadFile_1",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/listener/{referenceId}/discovery/export": {
      "post": {
        "tags": [
          "Apps"
        ],
        "description": "Exports URIs associated with a specified reference ID.",
        "operationId": "exportUris",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alarm": {
      "post": {
        "tags": [
          "Management"
        ],
        "description": "Create or update alarm",
        "operationId": "createOrUpdateAlarm",
        "parameters": [
          {
            "name": "Stack Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Alarm configuration in JSON format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stacks": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get list of stacks",
        "operationId": "getStacks",
        "parameters": [
          {
            "name": "Instance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponsePermissionDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponsePermissionDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get stack details",
        "operationId": "getStack",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponsePermissionDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponsePermissionDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/mf": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves malicious false (MF) incidents within the specified time range.",
        "operationId": "queryMatches",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/fp": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves false-positive (FP) incidents data based on the specified filter.",
        "operationId": "getRuleFilterData",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/fp/uri": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves WAF rules matched per URI based on the specified filter.",
        "operationId": "getMatchedRulesPerUri",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/tools/fp/match": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves match data for specific URIs based on the provided filter.",
        "operationId": "getUriMatchData",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/rules": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves WAF rules for a specified stack, filtered by the provided rule criteria.",
        "operationId": "getWafRules",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/waf/auto-profile": {
      "get": {
        "tags": [
          "WAF-API"
        ],
        "description": "Retrieves auto-profile data for a WAF stack based on the provided zone, listener, and key.",
        "operationId": "getAutoProfileData",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Listener Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/tools/ioc": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of unique malicious IoCs extracted from incidents",
        "operationId": "getIoCList",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Filter by ReferenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter by Incident Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseMapStringLong"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseMapStringLong"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/tasks": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of tasks",
        "operationId": "getTasks",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Match Filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseTask"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/task/{taskId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get task details",
        "operationId": "getTask",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "description": "Delete task",
        "operationId": "deleteTask",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/sessions": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Retrieves session table",
        "operationId": "getSessions",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "List of Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Match",
            "in": "query",
            "description": "Filter by match content",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "description": "Defaults to 0 if not specified",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "description": "Defaults to 10 if not specified",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseSession"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseSession"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scans": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the list of scan tasks for the specified stack.",
        "operationId": "getScans",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseTask"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan/task/{taskId}/status": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Lists events associated with a specific scan task for the specified stack.",
        "operationId": "listEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseEvent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseEvent"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/plan": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get licensing plan associated with stack",
        "operationId": "getPlan",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseLicensePlan"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseLicensePlan"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/llb/rules": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves LLB rules with pagination and optional filtering for a specified stack.",
        "operationId": "getDdosRules",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/llb/rules/learning": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves signature status with optional filtering for a specified stack.",
        "operationId": "getSignatures",
        "parameters": [
          {
            "name": "Json Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/incident/{incidentId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get incident details",
        "operationId": "getIncident",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseIncident"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/events": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of stack events",
        "operationId": "getStackEvents",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Event Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Event Sub Category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Matching Criteria",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "description": "Defaults to 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "description": "Defaults to 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseEvent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseEvent"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/event/{eventId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get stack event details",
        "operationId": "getEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseEvent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseEvent"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/event/{eventId}/download": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Download stack event file",
        "operationId": "downloadEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/stack/{stackId}/dns/verify": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": " Verifies the DNS domain for a specified stack.",
        "operationId": "verify",
        "parameters": [
          {
            "name": "Domain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/dns/statistics": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves DNS statistics for a specified time range and optional domain or zone ID in a stack.",
        "operationId": "statistics",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/dns/import": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Imports DNS records for a specified zone ID and domain in a stack.",
        "operationId": "importRecords",
        "parameters": [
          {
            "name": "Zone Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Domain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/ddos/rules": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves a paginated list of DDoS rules for a specified stack, filtered by provided criteria.",
        "operationId": "getDdosRules_1",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseCoreRule"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/ddos/rules/learning": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves the status of learning signatures based on provided filtering criteria for a specified stack.",
        "operationId": "getSignatures_1",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseSignaturesStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/dashboards": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Retrieves list of dashboards",
        "operationId": "getDashboards",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Instance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CUSTOM",
                "APP",
                "HOME",
                "INSTANCE",
                "SERVER",
                "METRIC",
                "SYSTEM",
                "ALARM"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboard"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboard"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/dashboard/graphs": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get dashboard graphs",
        "operationId": "getDashboard",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Dashboard Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/contents": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of resource contents",
        "operationId": "getContents",
        "parameters": [
          {
            "name": "Match Filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content Type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SSL_CERTIFICATE",
                "PUBLIC_PRIVATE_KEY",
                "CERTIFICATE_AUTHORITY",
                "CACHE_POOL",
                "CREDENTIALS",
                "PAYLOAD",
                "CERT_REVOCATION_LIST",
                "CLIENT_CERTIFICATE",
                "ERROR_PAGE",
                "IP_FEED",
                "RPZ",
                "HEALTH_SCRIPT"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseHashMapStringObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseHashMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/content/{contentId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get resource content",
        "operationId": "getContent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseResourceContent"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/analytics": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets populated dashboard",
        "operationId": "getDashboardAnalytics",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Dashboard Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Instance Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Duration paramter works along with start or end timestamp",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Use \u003Cnumber\u003E\u003Ctoken\u003E format with token m = minute,h = hour,d = day,M = month,Y = year. Eg. 1d = 1 Day. If duration specified with Start and End Timestamps, then End Timestamp will be ignored"
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Timezone (defaults to UTC)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/analytics/metric": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets populated metrics",
        "operationId": "getMetricAnalytics",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Instance Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Metric Category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Metric Key",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Duration",
            "in": "query",
            "description": "Duration paramter works along with start or end timestamp",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Use \u003Cnumber\u003E\u003Ctoken\u003E format with token m = minute,h = hour,d = day,M = month,Y = year. Eg. 1d = 1 Day. If duration specified with Start and End Timestamps, then End Timestamp will be ignored"
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Timezone (defaults to UTC)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseDashboardGraph"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/mf": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Queries incidents matching specified time parameters and pagination settings.",
        "operationId": "queryMatches_1",
        "parameters": [
          {
            "name": "Page Nmuber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Page Limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseIncident"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/fp": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Fetches matched rules based on the specified filter criteria.",
        "operationId": "getMatchedRules",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/fp/uri": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves matched rules specific to a URI based on filter criteria.",
        "operationId": "getMatchedRulesPerUri_1",
        "parameters": [
          {
            "name": "Json Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/tools/fp/match": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Obtains matching data for a specified URI based on filters.",
        "operationId": "getUriMatchData_1",
        "parameters": [
          {
            "name": "Json Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/rules": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Fetches rules based on filters specified in the request.",
        "operationId": "getRules",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseRuleDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseRuleDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/auto-profile": {
      "get": {
        "tags": [
          "Apps"
        ],
        "description": "Retrieves auto profile data based on the provided listener ID and key.",
        "operationId": "getAutoProfileData_1",
        "parameters": [
          {
            "name": "Reference Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metrics": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of metrics",
        "operationId": "getMetrics",
        "parameters": [
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "ADC",
                "DNS",
                "RDNS",
                "CDN",
                "DDOS",
                "LLB",
                "SCAN",
                "APM",
                "SLB",
                "WAF",
                "BLK",
                "VPN",
                "SWG"
              ]
            }
          },
          {
            "name": "Stack Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseMetric"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseMetric"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alarms": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Gets list of alarms",
        "operationId": "getAlarms_1",
        "parameters": [
          {
            "name": "Stack Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "App",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reference Id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page Number",
            "in": "query",
            "description": "Default page number is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page Size",
            "in": "query",
            "description": "Default value of page size is 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseAlarm"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseAlarm"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alarm/{alarmId}": {
      "get": {
        "tags": [
          "Management"
        ],
        "description": "Get alarm details",
        "operationId": "getAlarm",
        "parameters": [
          {
            "name": "Stack Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseAlarm"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponseAlarm"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "description": "Delete alarm",
        "operationId": "deleteAlarm",
        "parameters": [
          {
            "name": "Stack Id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stack/{stackId}/waf": {
      "get": {
        "tags": [
          "UIApp"
        ],
        "operationId": "getHome",
        "parameters": [
          {
            "name": "stackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/stack/{stackId}/waf/tools/mf": {
      "get": {
        "tags": [
          "UIApp"
        ],
        "operationId": "getRuleMatches",
        "parameters": [
          {
            "name": "stackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/stack/{stackId}/waf/profiles": {
      "get": {
        "tags": [
          "UIApp"
        ],
        "operationId": "getProfiles",
        "parameters": [
          {
            "name": "stackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/stack/{stackId}/waf/incidents": {
      "get": {
        "tags": [
          "UIApp"
        ],
        "operationId": "getDropMetrics",
        "parameters": [
          {
            "name": "stackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan/task/{taskId}": {
      "delete": {
        "tags": [
          "Apps"
        ],
        "description": "Deletes a scan task by its task ID for the specified stack.",
        "operationId": "deleteScanTask",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/scan/task/{taskId}/event/{eventId}": {
      "delete": {
        "tags": [
          "Apps"
        ],
        "description": "Deletes a specific scan event associated with a scan task for the specified stack.",
        "operationId": "deleteScanEvent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stack/{stackId}/adc/scan/{scanId}": {
      "delete": {
        "tags": [
          "Apps"
        ],
        "description": "Deletes a specified vulnerability assessment scan result.",
        "operationId": "deleteVAScanResult",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataResponseResourceContent": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/ResourceContent"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "ResourceContent": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SSL_CERTIFICATE",
              "PUBLIC_PRIVATE_KEY",
              "CERTIFICATE_AUTHORITY",
              "CACHE_POOL",
              "CREDENTIALS",
              "PAYLOAD",
              "CERT_REVOCATION_LIST",
              "CLIENT_CERTIFICATE",
              "ERROR_PAGE",
              "IP_FEED",
              "RPZ",
              "HEALTH_SCRIPT"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "SimpleResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "stackId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "timezone": {
            "type": "string"
          },
          "periodic": {
            "type": "string",
            "enum": [
              "NONE",
              "MILLISECOND",
              "SECOND",
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "preserveRun": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "DataResponseTask": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Task"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DataResponseStackApp": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/StackApp"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "StackApp": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "app": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CoreRule": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "STAGED",
              "PROD",
              "AUTO",
              "DISABLED"
            ]
          },
          "ruleName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "example": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "app": {
            "type": "string",
            "enum": [
              "NONE",
              "ADC",
              "DNS",
              "RDNS",
              "CDN",
              "DDOS",
              "LLB",
              "SCAN",
              "APM",
              "SLB",
              "WAF",
              "BLK",
              "VPN",
              "SWG"
            ]
          }
        }
      },
      "DataResponseHashMapStringCoreRule": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CoreRule"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AppFeature": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "NONE",
              "PARTIAL",
              "FULL"
            ]
          },
          "threshold": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AppPlan": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AppFeature"
            }
          },
          "restrictions": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "AppUsage": {
        "type": "object",
        "properties": {
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "restrictions": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "LicensePlan": {
        "type": "object",
        "properties": {
          "edition": {
            "type": "string",
            "enum": [
              "COMMUNITY",
              "PROFESSIONAL",
              "ENTERPRISE",
              "SAAS"
            ]
          },
          "apps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AppPlan"
            }
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "restrictions": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "ListResponseMetadata": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "perPage": {
            "type": "integer",
            "format": "int32"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "ListResponsePermissionDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/UserPermissionContext"
          },
          "enabled": {
            "type": "boolean"
          },
          "configuration": {
            "type": "string"
          },
          "stack": {
            "$ref": "#/components/schemas/Stack"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "currentAccess": {
            "type": "string",
            "enum": [
              "NONE",
              "VISIBLE",
              "READ",
              "READ_WRITE",
              "ADMIN"
            ]
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "PlanUsage": {
        "type": "object",
        "properties": {
          "usage": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "apps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AppUsage"
            }
          }
        }
      },
      "Stack": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "stackName": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "plan": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "payment": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "VIRTUAL",
              "BYOL",
              "SHARED",
              "DEDICATED"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "expiry": {
            "type": "integer",
            "format": "int64"
          },
          "signature": {
            "type": "string"
          },
          "licensePlan": {
            "$ref": "#/components/schemas/LicensePlan"
          },
          "planUsage": {
            "$ref": "#/components/schemas/PlanUsage"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "authority": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "using2FA": {
            "type": "boolean"
          },
          "mfaMode": {
            "type": "string"
          },
          "accountLocked": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "UserPermissionContext": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          }
        }
      },
      "DataResponsePermissionDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PermissionDto"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DataResponseObject": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "ruleId": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "sourceIp": {
            "type": "string"
          },
          "destinationIp": {
            "type": "string"
          },
          "sourcePort": {
            "type": "integer",
            "format": "int32"
          },
          "destinationPort": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "INBOUND",
              "OUTBOUND",
              "NONE"
            ]
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "log": {
            "type": "string"
          }
        }
      },
      "ListResponseIncident": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseObject": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseCoreRule": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoreRule"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "DataResponseSignaturesStatus": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/SignaturesStatus"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Signature": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "STAGED",
              "PROD",
              "AUTO",
              "DISABLED"
            ]
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "window": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "match": {
            "type": "integer",
            "format": "int64"
          },
          "evaluations": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SignaturesStatus": {
        "type": "object",
        "properties": {
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "rules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Signature"
            }
          },
          "id": {
            "type": "string"
          }
        }
      },
      "LearningStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "COOKIES",
              "HEADERS",
              "ARGUMENTS"
            ]
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS",
              "CONNECT",
              "NONE"
            ]
          },
          "description": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "overall": {
            "$ref": "#/components/schemas/Score"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Score"
            }
          },
          "fixed": {
            "type": "boolean"
          }
        }
      },
      "ListResponseLearningStatus": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LearningStatus"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "Score": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "requests": {
            "type": "integer",
            "format": "int64"
          },
          "length": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "ListResponseMapStringLong": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseTask": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseSession": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "srcIp": {
            "type": "string"
          },
          "srcPort": {
            "type": "integer",
            "format": "int32"
          },
          "dstIp": {
            "type": "string"
          },
          "dstPort": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "log": {
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "log": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "ListResponseEvent": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "DataResponseLicensePlan": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/LicensePlan"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DataResponseIncident": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Incident"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DataResponseEvent": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Event"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Alarm": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "string"
          },
          "alarmId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "THRESHOLD",
              "ANOMALY"
            ]
          },
          "name": {
            "type": "string"
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "stackId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "threshold": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ]
          },
          "consecutiveThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "currentConsecutiveCount": {
            "type": "integer",
            "format": "int32"
          },
          "reportEnabled": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "condition": {
            "type": "string",
            "enum": [
              "GREATER_THAN",
              "EQUALS_TO",
              "LESS_THAN"
            ]
          },
          "actionScript": {
            "type": "string"
          },
          "dedupUnit": {
            "type": "string",
            "enum": [
              "NONE",
              "MILLISECOND",
              "SECOND",
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "dedupDuration": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "ListResponseAlarm": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alarm"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "metricAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "AVG"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "metricKey": {
            "type": "string"
          },
          "appCategory": {
            "type": "string"
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "dashboardId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "enum": [
              "CUSTOM",
              "APP",
              "HOME",
              "INSTANCE",
              "SERVER",
              "METRIC",
              "SYSTEM",
              "ALARM"
            ]
          },
          "stackId": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "graphs": {
            "type": "string"
          },
          "report": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "string"
          }
        }
      },
      "ListResponseDashboard": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dashboard"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "DashboardGraph": {
        "type": "object",
        "properties": {
          "uiId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PIE",
              "DONUT",
              "AREA",
              "STEP",
              "LINE",
              "SUMMARY",
              "MAP",
              "BAR",
              "HBAR",
              "GAUGE",
              "TABLE"
            ]
          },
          "app": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GroupMetric"
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "precision": {
            "type": "integer",
            "format": "int32"
          },
          "dynamic": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "entries": {
            "type": "integer",
            "format": "int32"
          },
          "topTalker": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GraphMetric": {
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "metricAggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "AVG"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "MAX",
              "MIN",
              "FIRST",
              "LAST",
              "AVG",
              "COUNT",
              "TOTAL"
            ]
          },
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MAX",
              "MIN",
              "AVG",
              "FIRST",
              "LAST",
              "COUNT",
              "NONE"
            ]
          },
          "filters": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "metricKey": {
            "type": "string"
          },
          "appCategory": {
            "type": "string"
          }
        }
      },
      "GroupMetric": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "SUM",
              "MAX",
              "MIN",
              "AVG"
            ]
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphMetric"
            }
          },
          "color": {
            "type": "string"
          },
          "keyTransformation": {
            "type": "boolean"
          },
          "threshold": {
            "type": "integer",
            "format": "int64"
          },
          "thresholdColor": {
            "type": "string"
          }
        }
      },
      "ListResponseDashboardGraph": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardGraph"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseHashMapStringObject": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListResponseRuleDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleDto"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "RuleDto": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "STAGED",
              "PROD",
              "AUTO",
              "DISABLED"
            ]
          },
          "ruleName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "example": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "app": {
            "type": "string",
            "enum": [
              "NONE",
              "ADC",
              "DNS",
              "RDNS",
              "CDN",
              "DDOS",
              "LLB",
              "SCAN",
              "APM",
              "SLB",
              "WAF",
              "BLK",
              "VPN",
              "SWG"
            ]
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "match": {
            "type": "integer",
            "format": "int64"
          },
          "requests": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ListResponseMetric": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ListResponseMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            }
          },
          "supportingData": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "DataResponseAlarm": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Alarm"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      }
    }
  }
}